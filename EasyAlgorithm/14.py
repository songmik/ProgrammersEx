# 14. 미로 찾기 알고리즘

# ** 다음 그림과 같이 미로의 형태와 출발점과 도착점이 주어졌을 때 
#    출발점에서 도착점까지 가기 위한 최단 경로를 찾는 알고리즘을 만들어 보세요.



# 방법 
def miro(g, start, end): # g : 미로 정보 , start : 출발점, end : 도착점
    q = [] # 기억 장소 1(이동경로) : 앞으로 처리해야 할 이동 경로를 큐에 저장
    done = set() # 기억 장소 2 : 이미 큐에 추가한 꼭짓점들을 집합에 기록(중복 방지)

    q.append(start) # q에 출발점을 넣고 시작
    done.add(start)

    while q:
        p = q.pop(0)
        v = p[-1] # 큐에 저장된 이동 경로의 마지막 문자가 현재 처리해야 할 꼭짓점
        if v == end: # 처리해야 할 꼭짓점이 도착점에 도착하면 
            return p # 지금까지의 전체 이동 경로를 돌려주고 종료
        for x in g[v]: # 대상 꼭짓점에 연결된 꼭짓점들 중에
            if x not in done: # 아직 큐에 추가된 적이 없는 꼭짓점(x)을
                q.append(p+x) # 이동 경로에 새 꼭짓점으로 추가하여 저장
                done.add(x)
    return "?"

